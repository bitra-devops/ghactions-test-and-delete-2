name: workflow-1
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  Install-Dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js env
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules and npm
        uses: actions/cache@v3
        with:
          path: node_modules
#            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Tar node_modules
        run: tar -czf node_modules.tar.gz node_modules

      - name: Upload node_modules
        uses: actions/upload-artifact@v4
        with:
          name: npm_ci-dependencies
          path: node_modules.tar.gz

  Linting-Stage:
    runs-on: ubuntu-latest
    needs: Install-Dependencies
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js env
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules and npm
        uses: actions/cache@v3
        with:
          path: node_modules
#            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: npm_ci-dependencies

      - name: Extract node_modules
        run: |
          tar -xzf node_modules.tar.gz
          rm -rf node_modules.tar.gz

      - name: Add node_modules/.bin to PATH
        run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH

      - name: Run Lint
        run: npm run lint

  Testing-Stage:
    runs-on: ubuntu-latest
    needs: Linting-Stage
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js env
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules and npm
        uses: actions/cache@v3
        with:
          path: node_modules
#            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-


      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: npm_ci-dependencies

      - name: Extract node_modules
        run: |
          tar -xzf node_modules.tar.gz
          rm -rf node_modules.tar.gz

      - name: Add node_modules/.bin to PATH
        run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH

      - name: Verify downloaded node_modules
        run: ls -l node_modules/

      - name: Add node_modules/.bin to PATH
        run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH

      - name: Run Tests
        run: npm run test

  Build-Stage:
    runs-on: ubuntu-latest
    needs: Testing-Stage
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js env
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules and npm
        uses: actions/cache@v3
        with:
          path: node_modules
#            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: npm_ci-dependencies


      - name: Extract node_modules
        run: |
          tar -xzf node_modules.tar.gz
          rm -rf node_modules.tar.gz

      - name: Verify downloaded node_modules
        run: ls -l node_modules/

      - name: Add node_modules/.bin to PATH
        run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH

      - name: Build Stage
        run: npm run build